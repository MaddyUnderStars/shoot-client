/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as LoginRouteImport } from './routes/login'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AuthenticatedChannelAtmeRouteImport } from './routes/_authenticated/channel/@me'
import { Route as AuthenticatedChannelChannelIdRouteImport } from './routes/_authenticated/channel/$channelId'
import { Route as AuthenticatedChannelGuildIdChar123ChannelIdChar125RouteImport } from './routes/_authenticated/channel/$guildId/{-$channelId}'

const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedChannelAtmeRoute =
  AuthenticatedChannelAtmeRouteImport.update({
    id: '/_authenticated/channel/@me',
    path: '/channel/@me',
    getParentRoute: () => rootRouteImport,
  } as any)
const AuthenticatedChannelChannelIdRoute =
  AuthenticatedChannelChannelIdRouteImport.update({
    id: '/_authenticated/channel/$channelId',
    path: '/channel/$channelId',
    getParentRoute: () => rootRouteImport,
  } as any)
const AuthenticatedChannelGuildIdChar123ChannelIdChar125Route =
  AuthenticatedChannelGuildIdChar123ChannelIdChar125RouteImport.update({
    id: '/_authenticated/channel/$guildId/{-$channelId}',
    path: '/channel/$guildId/{-$channelId}',
    getParentRoute: () => rootRouteImport,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/channel/$channelId': typeof AuthenticatedChannelChannelIdRoute
  '/channel/@me': typeof AuthenticatedChannelAtmeRoute
  '/channel/$guildId/{-$channelId}': typeof AuthenticatedChannelGuildIdChar123ChannelIdChar125Route
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/channel/$channelId': typeof AuthenticatedChannelChannelIdRoute
  '/channel/@me': typeof AuthenticatedChannelAtmeRoute
  '/channel/$guildId/{-$channelId}': typeof AuthenticatedChannelGuildIdChar123ChannelIdChar125Route
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/_authenticated/channel/$channelId': typeof AuthenticatedChannelChannelIdRoute
  '/_authenticated/channel/@me': typeof AuthenticatedChannelAtmeRoute
  '/_authenticated/channel/$guildId/{-$channelId}': typeof AuthenticatedChannelGuildIdChar123ChannelIdChar125Route
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/login'
    | '/channel/$channelId'
    | '/channel/@me'
    | '/channel/$guildId/{-$channelId}'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | '/channel/$channelId'
    | '/channel/@me'
    | '/channel/$guildId/{-$channelId}'
  id:
    | '__root__'
    | '/'
    | '/login'
    | '/_authenticated/channel/$channelId'
    | '/_authenticated/channel/@me'
    | '/_authenticated/channel/$guildId/{-$channelId}'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  LoginRoute: typeof LoginRoute
  AuthenticatedChannelChannelIdRoute: typeof AuthenticatedChannelChannelIdRoute
  AuthenticatedChannelAtmeRoute: typeof AuthenticatedChannelAtmeRoute
  AuthenticatedChannelGuildIdChar123ChannelIdChar125Route: typeof AuthenticatedChannelGuildIdChar123ChannelIdChar125Route
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/channel/@me': {
      id: '/_authenticated/channel/@me'
      path: '/channel/@me'
      fullPath: '/channel/@me'
      preLoaderRoute: typeof AuthenticatedChannelAtmeRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/channel/$channelId': {
      id: '/_authenticated/channel/$channelId'
      path: '/channel/$channelId'
      fullPath: '/channel/$channelId'
      preLoaderRoute: typeof AuthenticatedChannelChannelIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/channel/$guildId/{-$channelId}': {
      id: '/_authenticated/channel/$guildId/{-$channelId}'
      path: '/channel/$guildId/{-$channelId}'
      fullPath: '/channel/$guildId/{-$channelId}'
      preLoaderRoute: typeof AuthenticatedChannelGuildIdChar123ChannelIdChar125RouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  LoginRoute: LoginRoute,
  AuthenticatedChannelChannelIdRoute: AuthenticatedChannelChannelIdRoute,
  AuthenticatedChannelAtmeRoute: AuthenticatedChannelAtmeRoute,
  AuthenticatedChannelGuildIdChar123ChannelIdChar125Route:
    AuthenticatedChannelGuildIdChar123ChannelIdChar125Route,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
